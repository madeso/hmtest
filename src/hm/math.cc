#include "hm/math.h"

#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>

namespace math
{
bool
logicXor(bool a, bool b)
{
    return a != b;
}

float
abs(float a)
{
    if (a > 0.0f)
        return a;
    else
        return -a;
}

// ----------------------------------------------------------------------------------------------------

float
maximum(float a, float b)
{
    if (a > b)
        return a;
    else
        return b;
}

// ----------------------------------------------------------------------------------------------------

float
minimum(float a, float b)
{
    if (a < b)
        return a;
    else
        return b;
}

// ----------------------------------------------------------------------------------------------------

float
floor(float a)
{
    return std::floor(a);
}

// ----------------------------------------------------------------------------------------------------

float
ceil(float a)
{
    return std::ceil(a);
}

// ----------------------------------------------------------------------------------------------------

bool
equal(float a, float b)
{
    return equal5(a, b);
}

// ----------------------------------------------------------------------------------------------------

bool
equal0(float a, float b)
{
    return abs(a - b) < 1.0f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal1(float a, float b)
{
    return abs(a - b) < 0.1f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal2(float a, float b)
{
    return abs(a - b) < 0.01f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal3(float a, float b)
{
    return abs(a - b) < 0.001f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal4(float a, float b)
{
    return abs(a - b) < 0.0001f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal5(float a, float b)
{
    return abs(a - b) < 0.00001f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal6(float a, float b)
{
    return abs(a - b) < 0.000001f;
}

// ----------------------------------------------------------------------------------------------------

bool
equal7(float a, float b)
{
    return abs(a - b) < 0.0000001f;
}

// ----------------------------------------------------------------------------------------------------

float
clampZero(float a)
{
    if (0.005f > abs(a))
    {
        return 0.0f;
    }
    else
    {
        return a;
    }
}

// ----------------------------------------------------------------------------------------------------

float
limitRange(float min, float a, float max)
{
    if (a < min)
    {
        return min;
    }
    else
    {
        if (a > max)
        {
            return max;
        }
        else
        {
            return a;
        }
    }
}

// ----------------------------------------------------------------------------------------------------

float
wrapRange(float min, float a, float max)
{
    assert(min < max);
    float f = a;
    while (f > max)
        f -= max - min;
    while (f < min)
        f += max - min;
    return f;
}

// ----------------------------------------------------------------------------------------------------

float
square(float a)
{
    return a * a;
}

// ----------------------------------------------------------------------------------------------------

float
squareRoot(float a)
{
    return sqrt(a);
}

// ----------------------------------------------------------------------------------------------------

float
cube(float a)
{
    return a * a * a;
}

// ----------------------------------------------------------------------------------------------------

float
sin(float a)
{
    return std::sin(a);
}

// ----------------------------------------------------------------------------------------------------

float
cos(float a)
{
    return std::cos(a);
}

// ----------------------------------------------------------------------------------------------------

float
tan(float a)
{
    return std::tan(a);
}

// ----------------------------------------------------------------------------------------------------

float
asin(float a)
{
    return std::asin(a);
}

// ----------------------------------------------------------------------------------------------------

float
acos(float a)
{
    return std::acos(a);
}

// ----------------------------------------------------------------------------------------------------

float
atan(float a)
{
    return std::atan(a);
}

// ----------------------------------------------------------------------------------------------------

float
interpolate(float p_from, float p_fromOrTo, float p_to)
{
    return p_from + (p_fromOrTo * (p_to - p_from));
}
}
